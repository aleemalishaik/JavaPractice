public class JavaPractice {
    public static void main(String[] args) {
        // int a[] = new int[5];
        // int l = a.length;
        // System.out.println(l);
        // String s = "This Is My String";
        // System.out.println(s.length());
        int result = mul(new int[] { 10, 10, 10 });// Anonymous Array
        System.out.println(result);
    }

    public static int mul(int[] Array) {
        int total = 1;
        for (int i : Array) {
            total *= i;
        }
        return total;
    }
}
------------------------------------------------------------------------------------
public class JavaPractice {
    public static void main(String[] args) {
        Object[] O = new Object[10];// can store object types including string
        O[0] = new Object();
        O[1] = new String("dasfasf");
        Number[] n = new Number[10];// can store object types except string
        // n[0] = new Number();// C.E Abstract class so cant make Array Of It
        n[1] = new Integer(10);
        // n[0]=new String("Aleem");//String is not a child of Number
    }
}
------------------------------------------------------------------------------------
public class JavaPractice {
    public static void main(String[] args) {
        JavaPractice p = new JavaPractice();
        int[] returnedArray;
        returnedArray = p.method(0, 1, 1, 2, 5, 4, 6, 8, 9, 4, 5);
        for (int i = 0; i < returnedArray.length; i++) {
            System.out.print(returnedArray[i] + "\t");
        }
    }

    public int[] method(int... x) {
        int[] array;
        array = x.clone();
        return array;
    }
}
------------------------------------------------------------------------------------
public class JavaPractice {

    public static void main(String[] args) {
        for (int i = 0; i < args.length; i++) {
            System.out.println(args[i]);
        }
    }
}
------------------------------------------------------------------------------------
